{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "INTERFACE_ID_ERC165",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "contracts/openzeppelin/contracts/introspection/IERC165.sol",
    "36": "contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol",
    "exportedSymbols": {
      "ERC165InterfacesSupported": [
        9673
      ],
      "SupportsInterfaceWithLookupMock": [
        9644
      ]
    },
    "id": 9674,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9588,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:36"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/introspection/IERC165.sol",
        "file": "../../introspection/IERC165.sol",
        "id": 9589,
        "nodeType": "ImportDirective",
        "scope": 9674,
        "sourceUnit": 8675,
        "src": "25:41:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9591,
              "name": "IERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8674,
              "src": "640:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC165_$8674",
                "typeString": "contract IERC165"
              }
            },
            "id": 9592,
            "nodeType": "InheritanceSpecifier",
            "src": "640:7:36"
          }
        ],
        "contractDependencies": [
          8674
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9590,
          "nodeType": "StructuredDocumentation",
          "src": "68:527:36",
          "text": " https://eips.ethereum.org/EIPS/eip-214#specification\n From the specification:\n > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead\n throw an exception.\n > These operations include [...], LOG0, LOG1, LOG2, [...]\n therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works)\n solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it"
        },
        "fullyImplemented": true,
        "id": 9644,
        "linearizedBaseContracts": [
          9644,
          8674
        ],
        "name": "SupportsInterfaceWithLookupMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "34d7006c",
            "id": 9595,
            "mutability": "constant",
            "name": "INTERFACE_ID_ERC165",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9644,
            "src": "737:55:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 9593,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "737:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783031666663396137",
              "id": 9594,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "782:10:36",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33540519_by_1",
                "typeString": "int_const 33540519"
              },
              "value": "0x01ffc9a7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9596,
              "nodeType": "StructuredDocumentation",
              "src": "799:83:36",
              "text": " @dev A mapping of interface id to whether or not it's supported."
            },
            "id": 9600,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9644,
            "src": "887:52:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 9599,
              "keyType": {
                "id": 9597,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "895:6:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "887:23:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 9598,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "905:4:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9608,
              "nodeType": "Block",
              "src": "1080:56:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9605,
                        "name": "INTERFACE_ID_ERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9595,
                        "src": "1109:19:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 9604,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9643,
                      "src": "1090:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 9606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:39:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9607,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:39:36"
                }
              ]
            },
            "documentation": {
              "id": 9601,
              "nodeType": "StructuredDocumentation",
              "src": "946:107:36",
              "text": " @dev A contract implementing SupportsInterfaceWithLookup\n implement ERC165 itself."
            },
            "id": 9609,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:2:36"
            },
            "returnParameters": {
              "id": 9603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:36"
            },
            "scope": 9644,
            "src": "1058:78:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8673
            ],
            "body": {
              "id": 9622,
              "nodeType": "Block",
              "src": "1311:57:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 9618,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9600,
                      "src": "1328:20:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 9620,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 9619,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9612,
                      "src": "1349:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1328:33:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9617,
                  "id": 9621,
                  "nodeType": "Return",
                  "src": "1321:40:36"
                }
              ]
            },
            "documentation": {
              "id": 9610,
              "nodeType": "StructuredDocumentation",
              "src": "1142:81:36",
              "text": " @dev Implement supportsInterface(bytes4) using a lookup table."
            },
            "functionSelector": "01ffc9a7",
            "id": 9623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9614,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1287:8:36"
            },
            "parameters": {
              "id": 9613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9612,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9623,
                  "src": "1255:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9611,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1254:20:36"
            },
            "returnParameters": {
              "id": 9617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9616,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9623,
                  "src": "1305:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9615,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:6:36"
            },
            "scope": 9644,
            "src": "1228:140:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9642,
              "nodeType": "Block",
              "src": "1504:152:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 9632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 9630,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9626,
                          "src": "1522:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30786666666666666666",
                          "id": 9631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1537:10:36",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "1522:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "455243313635496e7465726661636573537570706f727465643a20696e76616c696420696e74657266616365206964",
                        "id": 9633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1549:49:36",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                          "typeString": "literal_string \"ERC165InterfacesSupported: invalid interface id\""
                        },
                        "value": "ERC165InterfacesSupported: invalid interface id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                          "typeString": "literal_string \"ERC165InterfacesSupported: invalid interface id\""
                        }
                      ],
                      "id": 9629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1514:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:85:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9635,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:85:36"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9636,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9600,
                        "src": "1609:20:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 9638,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9637,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9626,
                        "src": "1630:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1609:33:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 9639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1645:4:36",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1609:40:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9641,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:40:36"
                }
              ]
            },
            "documentation": {
              "id": 9624,
              "nodeType": "StructuredDocumentation",
              "src": "1374:68:36",
              "text": " @dev Private method for registering an interface."
            },
            "id": 9643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9626,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9643,
                  "src": "1475:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9625,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:20:36"
            },
            "returnParameters": {
              "id": 9628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:36"
            },
            "scope": 9644,
            "src": "1447:209:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 9674,
        "src": "596:1062:36"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9645,
              "name": "SupportsInterfaceWithLookupMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9644,
              "src": "1698:31:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SupportsInterfaceWithLookupMock_$9644",
                "typeString": "contract SupportsInterfaceWithLookupMock"
              }
            },
            "id": 9646,
            "nodeType": "InheritanceSpecifier",
            "src": "1698:31:36"
          }
        ],
        "contractDependencies": [
          8674,
          9644
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9673,
        "linearizedBaseContracts": [
          9673,
          9644,
          8674
        ],
        "name": "ERC165InterfacesSupported",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9671,
              "nodeType": "Block",
              "src": "1786:126:36",
              "statements": [
                {
                  "body": {
                    "id": 9669,
                    "nodeType": "Block",
                    "src": "1846:60:36",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9664,
                                "name": "interfaceIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9649,
                                "src": "1879:12:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 9666,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9665,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9653,
                                "src": "1892:1:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1879:15:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 9663,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9643,
                            "src": "1860:18:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 9667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1860:35:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9668,
                        "nodeType": "ExpressionStatement",
                        "src": "1860:35:36"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9656,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9653,
                      "src": "1816:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9657,
                        "name": "interfaceIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9649,
                        "src": "1820:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 9658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1820:19:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1816:23:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9670,
                  "initializationExpression": {
                    "assignments": [
                      9653
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9653,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 9670,
                        "src": "1801:9:36",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1801:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 9655,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1813:1:36",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1801:13:36"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 9661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1841:3:36",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 9660,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9653,
                        "src": "1841:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9662,
                    "nodeType": "ExpressionStatement",
                    "src": "1841:3:36"
                  },
                  "nodeType": "ForStatement",
                  "src": "1796:110:36"
                }
              ]
            },
            "documentation": null,
            "id": 9672,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9649,
                  "mutability": "mutable",
                  "name": "interfaceIds",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9672,
                  "src": "1749:28:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9647,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "1749:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 9648,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1749:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1748:30:36"
            },
            "returnParameters": {
              "id": 9651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:36"
            },
            "scope": 9673,
            "src": "1736:176:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9674,
        "src": "1660:254:36"
      }
    ],
    "src": "0:1915:36"
  },
  "bytecode": "608060405234801561001057600080fd5b506100216301ffc9a760e01b610026565b610094565b6001600160e01b0319808216141561006f5760405162461bcd60e51b815260040180806020018281038252602f815260200180610194602f913960400191505060405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60f2806100a26000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806301ffc9a714603757806334d7006c14606f575b600080fd5b605b60048036036020811015604b57600080fd5b50356001600160e01b0319166092565b604080519115158252519081900360200190f35b607560b1565b604080516001600160e01b03199092168252519081900360200190f35b6001600160e01b03191660009081526020819052604090205460ff1690565b6301ffc9a760e01b8156fea2646970667358221220d556e5b126b62de990e235f287fb90e0d80c44a0a50bc0c3839e5411d689023564736f6c634300060c0033455243313635496e7465726661636573537570706f727465643a20696e76616c696420696e74657266616365206964",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "SupportsInterfaceWithLookupMock",
  "coverageMap": {
    "branches": {
      "22": {},
      "36": {}
    },
    "statements": {
      "22": {},
      "36": {
        "SupportsInterfaceWithLookupMock.supportsInterface": {
          "0": [
            1321,
            1361
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC165"
  ],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060325760003560e01c806301ffc9a714603757806334d7006c14606f575b600080fd5b605b60048036036020811015604b57600080fd5b50356001600160e01b0319166092565b604080519115158252519081900360200190f35b607560b1565b604080516001600160e01b03199092168252519081900360200190f35b6001600160e01b03191660009081526020819052604090205460ff1690565b6301ffc9a760e01b8156fea2646970667358221220d556e5b126b62de990e235f287fb90e0d80c44a0a50bc0c3839e5411d689023564736f6c634300060c0033",
  "deployedSourceMap": "596:1062:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1228:140;;;;;;;;;;;;;;;;-1:-1:-1;1228:140:36;-1:-1:-1;;;;;;1228:140:36;;:::i;:::-;;;;;;;;;;;;;;;;;;737:55;;;:::i;:::-;;;;-1:-1:-1;;;;;;737:55:36;;;;;;;;;;;;;;1228:140;-1:-1:-1;;;;;;1328:33:36;1305:4;1328:33;;;;;;;;;;;;;;1228:140::o;737:55::-;-1:-1:-1;;;737:55:36;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "A contract implementing SupportsInterfaceWithLookup implement ERC165 itself."
      },
      "supportsInterface(bytes4)": {
        "details": "Implement supportsInterface(bytes4) using a lookup table."
      }
    },
    "notice": "https://eips.ethereum.org/EIPS/eip-214#specification From the specification: > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead throw an exception. > These operations include [...], LOG0, LOG1, LOG2, [...] therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works) solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it",
    "stateVariables": {
      "_supportedInterfaces": {
        "details": "A mapping of interface id to whether or not it's supported."
      }
    },
    "version": 1
  },
  "offset": [
    596,
    1658
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x34D7006C EQ PUSH1 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x75 PUSH1 0xB1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 JUMP 0xE5 0xB1 0x26 0xB6 0x2D 0xE9 SWAP1 0xE2 CALLDATALOAD CALLCODE DUP8 0xFB SWAP1 0xE0 0xD8 0xC DIFFICULTY LOG0 0xA5 SIGNEXTEND 0xC0 0xC3 DUP4 SWAP15 SLOAD GT 0xD6 DUP10 MUL CALLDATALOAD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "6": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "DUP1",
      "path": "36"
    },
    "7": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "8": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "11": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "DUP1",
      "path": "36"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "REVERT",
      "path": "36"
    },
    "15": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "16": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "POP",
      "path": "36"
    },
    "17": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "20": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "LT",
      "path": "36"
    },
    "21": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x32"
    },
    "23": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "24": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "27": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "SHR",
      "path": "36"
    },
    "30": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "DUP1",
      "path": "36"
    },
    "31": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x1FFC9A7"
    },
    "36": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "EQ",
      "path": "36"
    },
    "37": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x37"
    },
    "39": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "40": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "DUP1",
      "path": "36"
    },
    "41": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x34D7006C"
    },
    "46": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "EQ",
      "path": "36"
    },
    "47": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x6F"
    },
    "49": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "50": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "51": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "53": {
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "DUP1",
      "path": "36"
    },
    "54": {
      "first_revert": true,
      "fn": null,
      "offset": [
        596,
        1658
      ],
      "op": "REVERT",
      "path": "36"
    },
    "55": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "56": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x5B"
    },
    "58": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "60": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "DUP1",
      "path": "36"
    },
    "61": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "62": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "SUB",
      "path": "36"
    },
    "63": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "65": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "DUP2",
      "path": "36"
    },
    "66": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "LT",
      "path": "36"
    },
    "67": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "68": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4B"
    },
    "70": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "71": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "73": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "DUP1",
      "path": "36"
    },
    "74": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "REVERT",
      "path": "36"
    },
    "75": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "76": {
      "op": "POP"
    },
    "77": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "78": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "80": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "82": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "84": {
      "op": "SHL"
    },
    "85": {
      "op": "SUB"
    },
    "86": {
      "op": "NOT"
    },
    "87": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "AND",
      "path": "36"
    },
    "88": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x92"
    },
    "90": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "jump": "i",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMP",
      "path": "36"
    },
    "91": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "92": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "94": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "DUP1",
      "path": "36"
    },
    "95": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "96": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "97": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "98": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "99": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "DUP3",
      "path": "36"
    },
    "100": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "101": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "102": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "103": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "DUP2",
      "path": "36"
    },
    "104": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "105": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "SUB",
      "path": "36"
    },
    "106": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "108": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "ADD",
      "path": "36"
    },
    "109": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "110": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "RETURN",
      "path": "36"
    },
    "111": {
      "offset": [
        737,
        792
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "112": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x75"
    },
    "114": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xB1"
    },
    "116": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "jump": "i",
      "offset": [
        737,
        792
      ],
      "op": "JUMP",
      "path": "36"
    },
    "117": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "118": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "120": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "DUP1",
      "path": "36"
    },
    "121": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "128": {
      "op": "SHL"
    },
    "129": {
      "op": "SUB"
    },
    "130": {
      "op": "NOT"
    },
    "131": {
      "offset": [
        737,
        792
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "132": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "133": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "AND",
      "path": "36"
    },
    "134": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "DUP3",
      "path": "36"
    },
    "135": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "136": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "137": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "138": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "DUP2",
      "path": "36"
    },
    "139": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "140": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "SUB",
      "path": "36"
    },
    "141": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "143": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "ADD",
      "path": "36"
    },
    "144": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "145": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        737,
        792
      ],
      "op": "RETURN",
      "path": "36"
    },
    "146": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "151": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "153": {
      "op": "SHL"
    },
    "154": {
      "op": "SUB"
    },
    "155": {
      "op": "NOT"
    },
    "156": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "AND",
      "path": "36",
      "statement": 0
    },
    "157": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1305,
        1309
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "159": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "160": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "DUP2",
      "path": "36"
    },
    "161": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "162": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "164": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "DUP2",
      "path": "36"
    },
    "165": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "166": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "167": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "169": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "170": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "171": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "172": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "174": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "AND",
      "path": "36"
    },
    "175": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "offset": [
        1328,
        1361
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "176": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "jump": "o",
      "offset": [
        1228,
        1368
      ],
      "op": "JUMP",
      "path": "36"
    },
    "177": {
      "offset": [
        737,
        792
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "178": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "185": {
      "op": "SHL"
    },
    "186": {
      "offset": [
        737,
        792
      ],
      "op": "DUP2",
      "path": "36"
    },
    "187": {
      "fn": "SupportsInterfaceWithLookupMock.supportsInterface",
      "jump": "o",
      "offset": [
        737,
        792
      ],
      "op": "JUMP",
      "path": "36"
    }
  },
  "sha1": "ffd10121c56ffabdd9e3ea392971088dcbf90374",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * https://eips.ethereum.org/EIPS/eip-214#specification\n * From the specification:\n * > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead\n * throw an exception.\n * > These operations include [...], LOG0, LOG1, LOG2, [...]\n *\n * therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works)\n * solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it\n */\ncontract SupportsInterfaceWithLookupMock is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 public constant INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev A mapping of interface id to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    /**\n     * @dev A contract implementing SupportsInterfaceWithLookup\n     * implement ERC165 itself.\n     */\n    constructor () public {\n        _registerInterface(INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev Implement supportsInterface(bytes4) using a lookup table.\n     */\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Private method for registering an interface.\n     */\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"ERC165InterfacesSupported: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n\ncontract ERC165InterfacesSupported is SupportsInterfaceWithLookupMock {\n    constructor (bytes4[] memory interfaceIds) public {\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            _registerInterface(interfaceIds[i]);\n        }\n    }\n}\n",
  "sourceMap": "596:1062:36:-:0;;;1058:78;;;;;;;;;-1:-1:-1;1090:39:36;-1:-1:-1;;;1090:18:36;:39::i;:::-;596:1062;;1447:209;-1:-1:-1;;;;;;1522:25:36;;;;;1514:85;;;;-1:-1:-1;;;1514:85:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1609:33:36;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1609:40:36;1645:4;1609:40;;;1447:209::o;596:1062::-;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol",
  "type": "contract"
}